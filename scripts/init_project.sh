#!/bin/bash

# Script d'initialisation du projet MLOps

set -e

echo "üöÄ Initialisation du projet MLOps..."

# Cr√©er la structure des r√©pertoires
echo "üìÅ Cr√©ation de la structure des r√©pertoires..."
mkdir -p data/{raw,processed,monitoring}
mkdir -p models
mkdir -p reports
mkdir -p logs
mkdir -p .dvc

# Initialiser Git si pas d√©j√† fait
if [ ! -d ".git" ]; then
    echo "üîß Initialisation de Git..."
    git init
    git add .gitignore
    git commit -m "Initial commit"
fi

# Initialiser DVC
echo "üîß Initialisation de DVC..."
dvc init

# Configurer DVC remote (MinIO)
echo "üîß Configuration du remote DVC..."
dvc remote add -d minio s3://mlops-bucket
dvc remote modify minio endpointurl http://localhost:9000
dvc remote modify minio access_key_id minioadmin
dvc remote modify minio secret_access_key minioadmin123

# Cr√©er les environnements virtuels
echo "üêç Configuration de l'environnement Python..."
python -m venv venv
source venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt

# G√©n√©rer la cl√© Fernet pour Airflow
echo "üîë G√©n√©ration de la cl√© Fernet pour Airflow..."
python -c "from cryptography.fernet import Fernet; print('AIRFLOW_FERNET_KEY=' + Fernet.generate_key().decode())" > .env

# Initialiser la base de donn√©es Airflow
echo "üóÑÔ∏è  Initialisation d'Airflow..."
export AIRFLOW_HOME=$PWD/airflow
mkdir -p $AIRFLOW_HOME
airflow db init

# Cr√©er un utilisateur admin Airflow
airflow users create \
    --username admin \
    --firstname Admin \
    --lastname User \
    --role Admin \
    --email admin@example.com \
    --password admin

echo "‚úÖ Initialisation termin√©e!"
echo "üìã Prochaines √©tapes:"
echo "   1. Configurer les secrets GitHub pour CI/CD"
echo "   2. Adapter les URLs dans les fichiers de config"
echo "   3. Lancer: docker-compose up -d"
echo "   4. Acc√©der √† Airflow: http://localhost:8080"
echo "   5. Acc√©der √† Grafana: http://localhost:3000"